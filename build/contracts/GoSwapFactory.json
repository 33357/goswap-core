{
  "contractName": "GoSwapFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pairCodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_migrator",
          "type": "address"
        }
      ],
      "name": "setMigrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PairCreated(address,address,address,uint256)\":{\"details\":\"\\u4e8b\\u4ef6:\\u521b\\u5efa\\u914d\\u5bf9\",\"params\":{\"pair\":\"\\u914d\\u5bf9\\u5730\\u5740\",\"token0\":\"token0\",\"token1\":\"token1\"}}},\"kind\":\"dev\",\"methods\":{\"allPairsLength()\":{\"details\":\"\\u67e5\\u8be2\\u914d\\u5bf9\\u6570\\u7ec4\\u957f\\u5ea6\\u65b9\\u6cd5\"},\"constructor\":{\"details\":\"\\u6784\\u9020\\u51fd\\u6570\"},\"createPair(address,address)\":{\"details\":\"\\u521b\\u5efa\\u914d\\u5bf9\",\"params\":{\"tokenA\":\"TokenA\",\"tokenB\":\"TokenB\"},\"returns\":{\"pair\":\"\\u914d\\u5bf9\\u5730\\u5740\"}},\"pairCodeHash()\":{\"details\":\"\\u914d\\u5bf9\\u5408\\u7ea6\\u6e90\\u4ee3\\u7801Bytecode\\u7684hash\\u503c(\\u7528\\u4f5c\\u524d\\u7aef\\u8ba1\\u7b97\\u914d\\u5bf9\\u5408\\u7ea6\\u5730\\u5740)\"},\"setFeeTo(address)\":{\"details\":\"\\u8bbe\\u7f6e\\u6536\\u7a0e\\u5730\\u5740\",\"params\":{\"_feeTo\":\"\\u6536\\u7a0e\\u5730\\u5740\"}},\"setFeeToSetter(address)\":{\"details\":\"\\u8bbe\\u7f6e\\u6536\\u7a0e\\u6743\\u9650\\u63a7\\u5236\",\"params\":{\"_feeToSetter\":\"\\u6536\\u7a0e\\u6743\\u9650\\u63a7\\u5236\"}},\"setMigrator(address)\":{\"details\":\"\\u8bbe\\u7f6e\\u8fc1\\u79fb\\u5408\\u7ea6\\u5730\\u5740\\u7684\\u65b9\\u6cd5,\\u53ea\\u80fd\\u7531feeToSetter\\u8bbe\\u7f6e\",\"params\":{\"_migrator\":\"\\u8fc1\\u79fb\\u5408\\u7ea6\\u5730\\u5740\"}}},\"title\":\"GoSwap\\u5de5\\u5382\\u5408\\u7ea6\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allPairs(uint256)\":{\"notice\":\"\\u6240\\u6709\\u914d\\u5bf9\\u6570\\u7ec4\"},\"createPair(address,address)\":{\"notice\":\"\\u5e94\\u8be5\\u4ece\\u8def\\u7531\\u5408\\u7ea6\\u8c03\\u7528\\u914d\\u5bf9\\u5bfb\\u627e\\u5de5\\u5382\\u5408\\u7ea6\\u6765\\u8c03\\u7528,\\u5426\\u5219\\u901a\\u8fc7\\u8def\\u7531\\u5408\\u7ea6\\u627e\\u4e0d\\u5230\\u914d\\u5bf9\\u5408\\u7ea6\"},\"feeTo()\":{\"notice\":\"\\u6536\\u7a0e\\u5730\\u5740\"},\"feeToSetter()\":{\"notice\":\"\\u6536\\u7a0e\\u6743\\u9650\\u63a7\\u5236\\u5730\\u5740,\\u5e94\\u4e3a\\u6cbb\\u7406\\u5730\\u5740\"},\"getPair(address,address)\":{\"notice\":\"\\u914d\\u5bf9\\u6620\\u5c04,\\u5730\\u5740=>(\\u5730\\u5740=>\\u5730\\u5740)\"},\"migrator()\":{\"notice\":\"\\u8fc1\\u79fb\\u5408\\u7ea6\\u5730\\u5740\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/cui/Documents/goswap/goswap-core/contracts/GoSwapFactory.sol\":\"GoSwapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/cui/Documents/goswap/goswap-core/contracts/GoSwapERC20.sol\":{\"keccak256\":\"0x4dedd6f0af238c27d77e9e3680c7cb460b2fea10c0a61fd73f871413fae412f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c1f372f16a69615066b1b09f878c53d6f355ae33fc54e23de4bc5b4b5eb0ae1\",\"dweb:/ipfs/QmVVHZRako19aDThYMnJJaWzDH2q8pDCxXPDghk9CejZgb\"]},\"/home/cui/Documents/goswap/goswap-core/contracts/GoSwapFactory.sol\":{\"keccak256\":\"0x032034a35690336bbea9eae43c5b0900aa0c5adde89e1ed49793a64b0e8847b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a52f914bfb8c33c67b13d8ca7786bcc355fbedf2118b3eef070ef42c333208ac\",\"dweb:/ipfs/Qmdqmquwa2tSVupFFQ3ZZGRyBPb8k3RHgHENMXryh4Epas\"]},\"/home/cui/Documents/goswap/goswap-core/contracts/GoSwapPair.sol\":{\"keccak256\":\"0xa92f55e271d2bd0816b4285b794a048eda0e240bacc47eeefa3f381db8967f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ec2f91e6dff16029fcf26c5de23cf7a37249bb9221586eb424f195bba56d859\",\"dweb:/ipfs/QmVxWJbudhSi15dsrSjUdw8NPZue5VkWpKMNx2r363mash\"]},\"/home/cui/Documents/goswap/goswap-core/contracts/interfaces/IERC20GoSwap.sol\":{\"keccak256\":\"0x358b138bcac369ba4144312d844d2877636f80f68d9c9bc2a71b7ac6a82ac504\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da899c6a247021f4b099c3a6f94fd6d093ae1354c441cbccbac650967c9f6d59\",\"dweb:/ipfs/QmTt4EKntgYPCFfXVbKnn23PpjykaJcfhUovDLM9nyeeLp\"]},\"/home/cui/Documents/goswap/goswap-core/contracts/interfaces/IGoSwapCallee.sol\":{\"keccak256\":\"0xf3d4086ceec17404972aa23c9638083d5cc5e9936d3b9564e4cbb7633e8c9035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a663273707cb5dbd21e731ce497fc0a5a03f6d06ed3ac52504cc23525f1354e2\",\"dweb:/ipfs/QmNVycFk6dDT6xVTxE6wgHbjRkXhdbL7DxzaWHy39ZZnXV\"]},\"/home/cui/Documents/goswap/goswap-core/contracts/interfaces/IGoSwapFactory.sol\":{\"keccak256\":\"0xccb590ced68e8358e0bc510203d6ce7caaf04573ff1d06a82ce1d8dbcb8a04f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aabc26653c468321bf9f30b10a337ba380ecf6c3101e168f32d3eea82139a08\",\"dweb:/ipfs/QmP1riDtjNbJ7hPYbWfX8b3e8LpwoHVyKpAioyoL2ELY7k\"]},\"/home/cui/Documents/goswap/goswap-core/contracts/interfaces/IGoSwapPair.sol\":{\"keccak256\":\"0xda9084a5f6d17ac6f5f659cb400c29f40ec56ca951e8f51ac7c06d30aaca1898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e962bd05d091b48d8bf0d93e658de6e38eb9e211c95bee893380eb924651af9\",\"dweb:/ipfs/QmWwSRvoAX87DEjaYdiy63qvQoCFNUwNXr2p1rf5ZXi2Wq\"]},\"/home/cui/Documents/goswap/goswap-core/contracts/libraries/Math.sol\":{\"keccak256\":\"0xfcbd3af3dec40ef8cd8f93e292b3df3589bd8d2bd643e07027b554529a57ebca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e62c14d3f1b189e85a9b0f614493c0781c90d921df652c62e96339d7a823123\",\"dweb:/ipfs/QmVVEjzbSxPtXkXJY7ywCzcZ8371wue2aAGDpQ9CT9tJWp\"]},\"/home/cui/Documents/goswap/goswap-core/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x7cba3ac5d81c067f47535fa16af263dda588fd08bee90549b19a6fcb2628f577\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6912a340fb0ba1f098730d15d7e8916ca110d36e5bd859cb6b4729cd310f051f\",\"dweb:/ipfs/QmNVQYY1R9ThxVv9YEDofiyHxchnQYANtM4c51buY1f1xy\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80637cd07e47116100715780637cd07e47146101395780639aab924814610141578063a2e74af614610149578063c9c653961461016f578063e6a439051461019d578063f46901ed146101cb576100a9565b8063017e7e58146100ae578063094b7415146100d25780631e3dd18b146100da57806323cf3118146100f7578063574f2ba31461011f575b600080fd5b6100b66101f1565b604080516001600160a01b039092168252519081900360200190f35b6100b6610200565b6100b6600480360360208110156100f057600080fd5b503561020f565b61011d6004803603602081101561010d57600080fd5b50356001600160a01b0316610236565b005b6101276102ab565b60408051918252519081900360200190f35b6100b66102b1565b6101276102c0565b61011d6004803603602081101561015f57600080fd5b50356001600160a01b03166102f2565b6100b66004803603604081101561018557600080fd5b506001600160a01b0381358116916020013516610367565b6100b6600480360360408110156101b357600080fd5b506001600160a01b0381358116916020013516610686565b61011d600480360360208110156101e157600080fd5b50356001600160a01b03166106ac565b6000546001600160a01b031681565b6001546001600160a01b031681565b6004818154811061021c57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b03163314610289576040805162461bcd60e51b815260206004820152601160248201527023b7a9bbb0b81d102327a92124a22222a760791b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60045490565b6002546001600160a01b031681565b6000604051806020016102d290610721565b6020820181038252601f19601f8201166040525080519060200120905090565b6001546001600160a01b03163314610345576040805162461bcd60e51b815260206004820152601160248201527023b7a9bbb0b81d102327a92124a22222a760791b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156103d0576040805162461bcd60e51b815260206004820152601b60248201527f476f537761703a204944454e544943414c5f4144445245535345530000000000604482015290519081900360640190fd5b600080836001600160a01b0316856001600160a01b0316106103f35783856103f6565b84845b90925090506001600160a01b03821661044d576040805162461bcd60e51b8152602060048201526014602482015273476f537761703a205a45524f5f4144445245535360601b604482015290519081900360640190fd5b6001600160a01b038281166000908152600360209081526040808320858516845290915290205416156104bd576040805162461bcd60e51b8152602060048201526013602482015272476f537761703a20504149525f45584953545360681b604482015290519081900360640190fd5b6060604051806020016104cf90610721565b6020820181038252601f19601f8201166040525090506000838360405160200180836001600160a01b031660601b8152601401826001600160a01b031660601b815260140192505050604051602081830303815290604052805190602001209050808251602084016000f59450846001600160a01b031663485cc95585856040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526003602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90950180549097168417909655925483519283529082015281517f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9929181900390910190a35050505092915050565b60036020908152600092835260408084209091529082529020546001600160a01b031681565b6001546001600160a01b031633146106ff576040805162461bcd60e51b815260206004820152601160248201527023b7a9bbb0b81d102327a92124a22222a760791b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6146a48061072f8339019056fe60c060405260036080819052620474c560ec1b60a090815262000026916000919062000144565b5060188054600560ff199091161761ff00191661030017905560016019553480156200005157600080fd5b50604080518082018252600f81526e23b7a9bbb0b8102628102a37b5b2b760891b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fde22e3c4214ec38270761c459fd5ec8df4a49276f3eb279cee5548bef4f3e075818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600455600680546001600160a01b0319163317905542601455620001e0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018757805160ff1916838001178555620001b7565b82800160010185558215620001b7579182015b82811115620001b75782518255916020019190600101906200019a565b50620001c5929150620001c9565b5090565b5b80821115620001c55760008155600101620001ca565b6144b480620001f06000396000f3fe608060405234801561001057600080fd5b506004361061035d5760003560e01c8063683ab406116101d3578063b944884111610104578063d21220a7116100a2578063ddca3f431161007c578063ddca3f4314610a0e578063f1461c5a14610a16578063f46901ed14610a4f578063fff6cae914610a755761035d565b8063d21220a714610987578063d505accf1461098f578063dd62ed3e146109e05761035d565b8063bf370195116100de578063bf37019514610937578063c45a015514610957578063cb122a091461095f578063cf40fc9c1461097f5761035d565b8063b944884114610901578063ba9a7a5614610909578063bc25cf77146109115761035d565b806389afcb441161017157806395d89b411161014b57806395d89b411461086a578063963d9d2714610872578063a6284b94146108a1578063a9059cbb146108d55761035d565b806389afcb44146108075780638c64ea4a1461082d5780638ccbb4e91461084a5761035d565b806370a08231116101ad57806370a082311461078d5780637464fc3d146107b35780637ecebe00146107bb57806386d7f6b9146107e15761035d565b8063683ab406146107355780636a6278421461073d5780636ae979c1146107635761035d565b806320721020116102ad57806340f680551161024b5780635909c0d5116102255780635909c0d5146107155780635a3d54931461071d5780635f9f4734146107255780636611f5281461072d5761035d565b806340f68055146106a7578063485cc955146106c757806353654e85146106f55761035d565b8063313ce56711610287578063313ce5671461063b5780633644e515146106595780633d0b985f146106615780633f489914146106815761035d565b806320721020146105d757806323b872dd146105fd57806330adf81f146106335761035d565b8063094992e81161031a5780630ead8227116102f45780630ead82271461056b5780631387c4fd1461058b5780631661874f146105ac57806318160ddd146105cf5761035d565b8063094992e814610500578063095ea7b3146105235780630dfe1681146105635761035d565b8063017e7e5814610362578063022c0d9f1461038657806302d05d3f1461041457806306fdde031461041c5780630902f1ac14610499578063093e6227146104d1575b600080fd5b61036a610a7d565b604080516001600160a01b039092168252519081900360200190f35b6104126004803603608081101561039c57600080fd5b8135916020810135916001600160a01b0360408301351691908101906080810160608201356401000000008111156103d357600080fd5b8201836020820111156103e557600080fd5b8035906020019184600183028401116401000000008311171561040757600080fd5b509092509050610a8c565b005b61036a610f76565b610424610f85565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561045e578181015183820152602001610446565b50505050905090810190601f16801561048b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104a1610fb0565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6104ee600480360360208110156104e757600080fd5b5035610fd7565b60408051918252519081900360200190f35b6104126004803603604081101561051657600080fd5b5080359060200135610feb565b61054f6004803603604081101561053957600080fd5b506001600160a01b0381351690602001356111b4565b604080519115158252519081900360200190f35b61036a6111cb565b6104126004803603602081101561058157600080fd5b503560ff166111e2565b610593611359565b6040805192835260208301919091528051918290030190f35b610412600480360360408110156105c257600080fd5b5080359060200135611363565b6104ee61151a565b610412600480360360408110156105ed57600080fd5b5060ff8135169060200135611520565b61054f6004803603606081101561061357600080fd5b506001600160a01b038135811691602081013590911690604001356115f2565b6104ee611686565b6106436116aa565b6040805160ff9092168252519081900360200190f35b6104ee6116af565b6104126004803603602081101561067757600080fd5b503560ff166116b5565b6104126004803603604081101561069757600080fd5b5060ff813516906020013561180b565b6104ee600480360360208110156106bd57600080fd5b503560ff166118d9565b610412600480360360408110156106dd57600080fd5b506001600160a01b03813581169160200135166119bd565b6104126004803603602081101561070b57600080fd5b503560ff16611d65565b6104ee611e32565b6104ee611e3f565b6104ee611e4a565b61036a611e50565b610643611f28565b6104ee6004803603602081101561075357600080fd5b50356001600160a01b0316611f31565b6104126004803603604081101561077957600080fd5b50803560ff16906020013561ffff16612344565b6104ee600480360360208110156107a357600080fd5b50356001600160a01b03166124d5565b6104ee6124e7565b6104ee600480360360208110156107d157600080fd5b50356001600160a01b03166124ed565b610412600480360360208110156107f757600080fd5b50356001600160a01b03166124ff565b6105936004803603602081101561081d57600080fd5b50356001600160a01b031661261d565b61036a6004803603602081101561084357600080fd5b503561284f565b6104126004803603602081101561086057600080fd5b503560ff1661286c565b6104246129b1565b6104126004803603604081101561088857600080fd5b50803560ff1690602001356001600160a01b0316612a3f565b6108be600480360360208110156108b757600080fd5b5035612b82565b6040805161ffff9092168252519081900360200190f35b61054f600480360360408110156108eb57600080fd5b506001600160a01b038135169060200135612bad565b61036a612bba565b6104ee612bc9565b6104126004803603602081101561092757600080fd5b50356001600160a01b0316612bcf565b6104126004803603602081101561094d57600080fd5b503560ff16612c4c565b61036a612d58565b6104126004803603602081101561097557600080fd5b503560ff16612d67565b610593612e83565b61036a612e9e565b610412600480360360e08110156109a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135612ea9565b6104ee600480360360408110156109f657600080fd5b506001600160a01b03813581169160200135166130a8565b6106436130c5565b610a3360048036036020811015610a2c57600080fd5b50356130d3565b604080516001600160701b039092168252519081900360200190f35b61041260048036036020811015610a6557600080fd5b50356001600160a01b0316613103565b610412613211565b600f546001600160a01b031681565b601954600114610ad4576040805162461bcd60e51b815260206004820152600e60248201526d11dbd4ddd85c0e881313d0d2d15160921b604482015290519081900360640190fd5b600060195584151580610ae75750600084115b610b225760405162461bcd60e51b81526004018080602001828103825260228152602001806143666022913960400191505060405180910390fd5b600080610b2d610fb0565b5091509150816001600160701b031687108015610b525750806001600160701b031686105b610ba3576040805162461bcd60e51b815260206004820152601e60248201527f476f537761703a20494e53554646494349454e545f4c49515549444954590000604482015290519081900360640190fd5b60075460085460009182916001600160a01b03918216919081169089168214801590610be15750806001600160a01b0316896001600160a01b031614155b610c27576040805162461bcd60e51b8152602060048201526012602482015271476f537761703a20494e56414c49445f544f60701b604482015290519081900360640190fd5b8a15610c3957610c3960008a8d61329b565b8915610c4b57610c4b60018a8c61329b565b8615610cfd57886001600160a01b03166339815037338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b158015610ce457600080fd5b505af1158015610cf8573d6000803e3d6000fd5b505050505b6011546001600160a01b031615610d8957601154604080516309718a2d60e41b8152336004820152602481018e9052604481018d90526001600160a01b038c8116606483015291519190921691639718a2d091608480830192600092919082900301818387803b158015610d7057600080fd5b505af1158015610d84573d6000803e3d6000fd5b505050505b610d9360006118d9565b9350610d9f60016118d9565b92505050600089856001600160701b0316038311610dbe576000610dcd565b89856001600160701b03160383035b9050600089856001600160701b0316038311610dea576000610df9565b89856001600160701b03160383035b90506000821180610e0a5750600081115b610e455760405162461bcd60e51b81526004018080602001828103825260218152602001806144396021913960400191505060405180910390fd5b601854600090610e7490610e62908590610100900460ff1661364d565b610e6e876103e861364d565b906136ad565b601854909150600090610e9490610e62908590610100900460ff1661364d565b9050610eb9620f4240610eb36001600160701b038b8116908b1661364d565b9061364d565b610ec3838361364d565b1015610f02576040805162461bcd60e51b8152602060048201526009602482015268476f537761703a204b60b81b604482015290519081900360640190fd5b5050610f10848488886136ef565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001601955505050505050505050565b6010546001600160a01b031681565b6040518060400160405280600f81526020016e23b7a9bbb0b8102628102a37b5b2b760891b81525081565b6012546013546001600160701b0380831693600160701b909304169163ffffffff90911690565b600c8160028110610fe457fe5b0154905081565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b15801561103957600080fd5b505afa15801561104d573d6000803e3d6000fd5b505050506040513d602081101561106357600080fd5b50516001600160a01b031633146110af576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b6019546001146110f7576040805162461bcd60e51b815260206004820152600e60248201526d11dbd4ddd85c0e881313d0d2d15160921b604482015290519081900360640190fd5b6000601981905580611107610fb0565b50600e8054600160701b6001600160701b031982166001600160701b039283168a9003831617818104831689900390921602600160701b600160e01b0319909116179055909250905061116e61115d60006118d9565b61116760016118d9565b84846136ef565b604080518581526020810185905281517ff5fc0dcb1d0b0dbad6c5cc3af98509d190f8584ebdc6bd07a5412fd99f14a21e929181900390910190a1505060016019555050565b60006111c1338484613892565b5060015b92915050565b60006007815b01546001600160a01b031690505b90565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b15801561123057600080fd5b505afa158015611244573d6000803e3d6000fd5b505050506040513d602081101561125a57600080fd5b50516001600160a01b031633146112a6576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b60078160ff16600281106112b657fe5b01546001600160a01b031663095ea7b3600960ff8416600281106112d657fe5b0154604080516001600160e01b031960e085901b1681526001600160a01b03909216600483015260006024830181905290516044808401936020939083900390910190829087803b15801561132a57600080fd5b505af115801561133e573d6000803e3d6000fd5b505050506040513d602081101561135457600080fd5b505050565b600c54600d549091565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b157600080fd5b505afa1580156113c5573d6000803e3d6000fd5b505050506040513d60208110156113db57600080fd5b50516001600160a01b03163314611427576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b60195460011461146f576040805162461bcd60e51b815260206004820152600e60248201526d11dbd4ddd85c0e881313d0d2d15160921b604482015290519081900360640190fd5b600060198190558061147f610fb0565b50600e8054600160701b600160e01b03196001600160701b031982166001600160701b039283168a01831617908116600160701b91829004831689019092160217905590925090506114d461115d60006118d9565b604080518581526020810185905281517f1849a2930e313b738ae415140756b184d8aa974b6776bf3ca1864c1b57eb7a19929181900390910190a1505060016019555050565b60015481565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b15801561156e57600080fd5b505afa158015611582573d6000803e3d6000fd5b505050506040513d602081101561159857600080fd5b50516001600160a01b031633146115e4576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b6115ee82826138f4565b5050565b6001600160a01b038316600090815260036020908152604080832033845290915281205460001914611671576001600160a01b038416600090815260036020908152604080832033845290915290205461164c90836136ad565b6001600160a01b03851660009081526003602090815260408083203384529091529020555b61167c848484613a25565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b15801561170357600080fd5b505afa158015611717573d6000803e3d6000fd5b505050506040513d602081101561172d57600080fd5b50516001600160a01b03163314611779576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b6118088160078360ff166002811061178d57fe5b0154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156117d757600080fd5b505afa1580156117eb573d6000803e3d6000fd5b505050506040513d602081101561180157600080fd5b50516138f4565b50565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b15801561185957600080fd5b505afa15801561186d573d6000803e3d6000fd5b505050506040513d602081101561188357600080fd5b50516001600160a01b031633146118cf576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b6115ee8282613ad3565b60006111c5600e8360ff16600281106118ee57fe5b60029182820401919006600e029054906101000a90046001600160701b03166001600160701b03166119b7600c8560ff166002811061192957fe5b015460078660ff166002811061193b57fe5b0154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561198557600080fd5b505afa158015611999573d6000803e3d6000fd5b505050506040513d60208110156119af57600080fd5b505190613d6a565b90613d6a565b6006546001600160a01b03163314611a0a576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b600780546001600160a01b038085166001600160a01b031992831681179093556008805491851691909216179055604080516395d89b4160e01b815290516395d89b4191600480820192600092909190829003018186803b158015611a6e57600080fd5b505afa158015611a82573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611aab57600080fd5b8101908080516040519392919084640100000000821115611acb57600080fd5b908301906020820185811115611ae057600080fd5b8251640100000000811182820188101715611afa57600080fd5b82525081516020918201929091019080838360005b83811015611b27578181015183820152602001611b0f565b50505050905090810190601f168015611b545780820380516001836020036101000a031916815260200191505b50604052505050816001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015611b9457600080fd5b505afa158015611ba8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611bd157600080fd5b8101908080516040519392919084640100000000821115611bf157600080fd5b908301906020820185811115611c0657600080fd5b8251640100000000811182820188101715611c2057600080fd5b82525081516020918201929091019080838360005b83811015611c4d578181015183820152602001611c35565b50505050905090810190601f168015611c7a5780820380516001836020036101000a031916815260200191505b5060405250505060405160200180806323a6281d60e11b81525060040183805190602001908083835b60208310611cc25780518252601f199092019160209182019101611ca3565b6001836020036101000a03801982511681845116808217855250505050505090500180602d60f81b81525060010182805190602001908083835b60208310611d1b5780518252601f199092019160209182019101611cfc565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052600090805190602001906113549291906142d2565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b158015611db357600080fd5b505afa158015611dc7573d6000803e3d6000fd5b505050506040513d6020811015611ddd57600080fd5b50516001600160a01b03163314611e29576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b61180881613dc4565b60006015815b0154905090565b600060156001611e38565b60145481565b600f546000906001600160a01b031615611e765750600f546001600160a01b03166111df565b62278d00611e8f601454426136ad90919063ffffffff16565b1115611f1657600660009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611ee357600080fd5b505afa158015611ef7573d6000803e3d6000fd5b505050506040513d6020811015611f0d57600080fd5b505190506111df565b506010546001600160a01b03166111df565b60185460ff1681565b6000601954600114611f7b576040805162461bcd60e51b815260206004820152600e60248201526d11dbd4ddd85c0e881313d0d2d15160921b604482015290519081900360640190fd5b6000601981905580611f8b610fb0565b50915091506000611f9c60006118d9565b90506000611faa60016118d9565b90506000611fc1836001600160701b0387166136ad565b90506000611fd8836001600160701b0387166136ad565b600e546001600160701b0380821690980397600160701b909104169095039490506120038686613e53565b600154806121f25760065460408051637cd07e4760e01b815290516000926001600160a01b031691637cd07e47916004808301926020929190829003018186803b15801561205057600080fd5b505afa158015612064573d6000803e3d6000fd5b505050506040513d602081101561207a57600080fd5b50519050336001600160a01b038216141561215557806001600160a01b03166340dc0e376040518163ffffffff1660e01b815260040160206040518083038186803b1580156120c857600080fd5b505afa1580156120dc573d6000803e3d6000fd5b505050506040513d60208110156120f257600080fd5b50519850881580159061210757506000198914155b612150576040805162461bcd60e51b81526020600482015260156024820152744261642064657369726564206c697175696469747960581b604482015290519081900360640190fd5b6121d1565b6001600160a01b038116156121aa576040805162461bcd60e51b815260206004820152601660248201527526bab9ba103737ba103430bb329036b4b3b930ba37b960511b604482015290519081900360640190fd5b6121c26103e8610e6e6121bd878761364d565b613f07565b98506121d160006103e8613f59565b50601080546001600160a01b0319166001600160a01b038b16179055612235565b6122326001600160701b038816612209858461364d565b8161221057fe5b046001600160701b038816612225858561364d565b8161222c57fe5b04613fe4565b97505b600088116122745760405162461bcd60e51b815260040180806020018281038252602581526020018061445a6025913960400191505060405180910390fd5b61227e8989613f59565b600e546001600160701b038082169890980197600160701b9091041695909501946122ab858589896136ef565b6122f5600e60015b600281049190910154601254600e80546001600160701b03908116818416038116946001169091026101000a9092048216600160701b9091048216031661364d565b6017556040805184815260208101849052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001601955509395945050505050565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b15801561239257600080fd5b505afa1580156123a6573d6000803e3d6000fd5b505050506040513d60208110156123bc57600080fd5b50516001600160a01b03163314612408576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b6103e88161ffff161115612455576040805162461bcd60e51b815260206004820152600f60248201526e726174696f20746f6f206c6172676560881b604482015290519081900360640190fd5b80600b8360ff166002811061246657fe5b601091828204019190066002026101000a81548161ffff021916908361ffff1602179055507f96c0eef22a7bb295ea8c8b81d2d13df8b0014977980969a2869fc38f9ad6a2938282604051808360ff1681526020018261ffff1681526020019250505060405180910390a15050565b60026020526000908152604090205481565b60175481565b60056020526000908152604090205481565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b15801561254d57600080fd5b505afa158015612561573d6000803e3d6000fd5b505050506040513d602081101561257757600080fd5b50516001600160a01b031633146125c3576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b601180546001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517fe638462efc3e524a1f003c0ae818bf16b83413b4fa820e3ae464486d8fb65d37916020908290030190a150565b600080601954600114612668576040805162461bcd60e51b815260206004820152600e60248201526d11dbd4ddd85c0e881313d0d2d15160921b604482015290519081900360640190fd5b6000601981905580612678610fb0565b50909250905060006126b9600e825b60029182820401919006600e029054906101000a90046001600160701b03166001600160701b0316610e6e60006118d9565b905060006126ef600e60015b60028104909101546001600160701b03600e6001938416026101000a9091041690610e6e906118d9565b30600090815260026020526040902054600e5491925090612727906001600160701b03808216880391600160701b9004168603613e53565b60015480612735838661364d565b8161273c57fe5b0497508061274a838561364d565b8161275157fe5b0496506000881180156127645750600087115b61279f5760405162461bcd60e51b81526004018080602001828103825260258152602001806143c96025913960400191505060405180910390fd5b6127a93083613ffa565b6127b560008a8a61329b565b6127c160018a8961329b565b6127cb60006118d9565b93506127d760016118d9565b92506127e5848488886136ef565b6127f1600e60016122b3565b601755604080518981526020810189905281516001600160a01b038c169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050506001601981905550915091565b6009816002811061285c57fe5b01546001600160a01b0316905081565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b1580156128ba57600080fd5b505afa1580156128ce573d6000803e3d6000fd5b505050506040513d60208110156128e457600080fd5b50516001600160a01b03163314612930576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b60078160ff166002811061294057fe5b01546001600160a01b031663095ea7b3600960ff84166002811061296057fe5b0154604080516001600160e01b031960e085901b1681526001600160a01b03909216600483015260001960248301525160448083019260209291908290030181600087803b15801561132a57600080fd5b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612a375780601f10612a0c57610100808354040283529160200191612a37565b820191906000526020600020905b815481529060010190602001808311612a1a57829003601f168201915b505050505081565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b158015612a8d57600080fd5b505afa158015612aa1573d6000803e3d6000fd5b505050506040513d6020811015612ab757600080fd5b50516001600160a01b03163314612b03576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b8060098360ff1660028110612b1457fe5b0180546001600160a01b0319166001600160a01b0392909216919091179055612b3c8261286c565b6040805160ff8416815290516001600160a01b038316917fed5b80965e7914a23eed5a1477186006b58152a664148244bf6f59200ca72f94919081900360200190a25050565b600b8160028110612b8f57fe5b60109182820401919006600202915054906101000a900461ffff1681565b60006111c1338484613a25565b6011546001600160a01b031681565b6103e881565b601954600114612c17576040805162461bcd60e51b815260206004820152600e60248201526d11dbd4ddd85c0e881313d0d2d15160921b604482015290519081900360640190fd5b60006019819055612c339082612c2e601283612687565b61329b565b612c44600182612c2e6012836126c5565b506001601955565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b158015612c9a57600080fd5b505afa158015612cae573d6000803e3d6000fd5b505050506040513d6020811015612cc457600080fd5b50516001600160a01b03163314612d10576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b6018805460ff831660ff19909116811790915560408051918252517f9dfa9ec58cc7c3de445921f65dcb418d4dfa21c5d475f5f377abc6a02c325da39181900360200190a150565b6006546001600160a01b031681565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b158015612db557600080fd5b505afa158015612dc9573d6000803e3d6000fd5b505050506040513d6020811015612ddf57600080fd5b50516001600160a01b03163314612e2b576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b6018805460ff80841661010090810261ff00199093169290921792839055604080519290930416815290517f3417887ae5fbc941092ff601511bc0f4e3f14ae835bb881189b4c8148c6512699181900360200190a150565b600e546001600160701b0380821692600160701b9092041690565b6000600760016111d1565b42841015612ef0576040805162461bcd60e51b815260206004820152600f60248201526e11dbd4ddd85c0e8811561412549151608a1b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa15801561300b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906130415750886001600160a01b0316816001600160a01b0316145b613092576040805162461bcd60e51b815260206004820152601960248201527f476f537761703a20494e56414c49445f5349474e415455524500000000000000604482015290519081900360640190fd5b61309d898989613892565b505050505050505050565b600360209081526000928352604080842090915290825290205481565b601854610100900460ff1681565b600e81600281106130e057fe5b60029182820401919006600e02915054906101000a90046001600160701b031681565b600660009054906101000a90046001600160a01b03166001600160a01b031663094b74156040518163ffffffff1660e01b815260040160206040518083038186803b15801561315157600080fd5b505afa158015613165573d6000803e3d6000fd5b505050506040513d602081101561317b57600080fd5b50516001600160a01b031633146131c7576040805162461bcd60e51b81526020600482015260116024820152600080516020614388833981519152604482015290519081900360640190fd5b600f80546001600160a01b0319166001600160a01b0383169081179091556040517f9887df018dfa75103faf0f1388028e55a1124783c285d8d2cbcf62a067a6b84490600090a250565b601954600114613259576040805162461bcd60e51b815260206004820152600e60248201526d11dbd4ddd85c0e881313d0d2d15160921b604482015290519081900360640190fd5b600060198190555061329461326e60006118d9565b61327860016118d9565b6012546001600160701b0380821691600160701b9004166136ef565b6001601955565b600060078460ff16600281106132ad57fe5b0154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156132f757600080fd5b505afa15801561330b573d6000803e3d6000fd5b505050506040513d602081101561332157600080fd5b5051905060006060838310156134a45761333a86613dc4565b60078660ff166002811061334a57fe5b015460408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b03898116602483015260448083018a9052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b178152925181519290941693909290918291908083835b602083106133f35780518252601f1990920191602091820191016133d4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613455576040519150601f19603f3d011682016040523d82523d6000602084013e61345a565b606091505b5090925090506000600b60ff88166002811061347257fe5b601091828204019190066002029054906101000a900461ffff1661ffff16111561349f5761349f8661408b565b6135cb565b60078660ff16600281106134b457fe5b015460408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b03898116602483015260448083018a9052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b178152925181519290941693909290918291908083835b6020831061355d5780518252601f19909201916020918201910161353e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146135bf576040519150601f19603f3d011682016040523d82523d6000602084013e6135c4565b606091505b5090925090505b8180156135f45750805115806135f457508080602001905160208110156135f157600080fd5b50515b613645576040805162461bcd60e51b815260206004820152601760248201527f476f537761703a205452414e534645525f4641494c4544000000000000000000604482015290519081900360640190fd5b505050505050565b60008261365c575060006111c5565b8282028284828161366957fe5b04146136a65760405162461bcd60e51b81526004018080602001828103825260218152602001806143a86021913960400191505060405180910390fd5b9392505050565b60006136a683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614162565b6001600160701b03841180159061370d57506001600160701b038311155b613751576040805162461bcd60e51b815260206004820152601060248201526f476f537761703a204f564552464c4f5760801b604482015290519081900360640190fd5b60135463ffffffff42811691811682039081161580159061377a57506001600160701b03841615155b801561378e57506001600160701b03831615155b156137f7578063ffffffff166137b6856137a7866141f9565b6001600160e01b03169061420b565b6001600160e01b03160260156000018054909101905563ffffffff81166137e0846137a7876141f9565b6001600160e01b0316026015600101805490910190555b601280546001600160701b0319166001600160701b0388811691909117600160701b600160e01b031916600160701b888316810291909117928390556013805463ffffffff191663ffffffff871617905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600081116139335760405162461bcd60e51b81526004018080602001828103825260258152602001806143ee6025913960400191505060405180910390fd5b61394f81600c8460ff166002811061394757fe5b015490613d6a565b600c8360ff166002811061395f57fe5b0155600960ff83166002811061397157fe5b01546040805163b6b55f2560e01b81526004810184905290516001600160a01b039092169163b6b55f259160248082019260009290919082900301818387803b1580156139bd57600080fd5b505af11580156139d1573d6000803e3d6000fd5b505050507f17026447a096c4e01a7a488bcd1fc234cfd1a7bff9bbcba205240548eb90a47f600c600060028110613a0457fe5b0154600d546040805192835260208301919091528051918290030190a15050565b6001600160a01b038316600090815260026020526040902054613a4890826136ad565b6001600160a01b038085166000908152600260205260408082209390935590841681522054613a779082613d6a565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008111613b125760405162461bcd60e51b81526004018080602001828103825260268152602001806144136026913960400191505060405180910390fd5b600060078360ff1660028110613b2457fe5b0154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015613b6e57600080fd5b505afa158015613b82573d6000803e3d6000fd5b505050506040513d6020811015613b9857600080fd5b50519050600960ff841660028110613bac57fe5b015460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015613bf857600080fd5b505af1158015613c0c573d6000803e3d6000fd5b505050506000613ca28260078660ff1660028110613c2657fe5b0154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015613c7057600080fd5b505afa158015613c84573d6000803e3d6000fd5b505050506040513d6020811015613c9a57600080fd5b5051906136ad565b9050600c8460ff1660028110613cb457fe5b01548111613cdb5780600c8560ff1660028110613ccd57fe5b018054919091039055613d23565b6000613cf9600c8660ff1660028110613cf057fe5b015483906136ad565b90506000600c8660ff1660028110613d0d57fe5b0155613d2185613d1b611e50565b8361329b565b505b600c54600d5460408051928352602083019190915280517f17026447a096c4e01a7a488bcd1fc234cfd1a7bff9bbcba205240548eb90a47f9281900390910190a150505050565b6000828201838110156136a6576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6118088160098360ff1660028110613dd857fe5b0154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015613e2257600080fd5b505afa158015613e36573d6000803e3d6000fd5b505050506040513d6020811015613e4c57600080fd5b5051613ad3565b6017548015801590613e69575060185460ff1615155b15611354576000613e896121bd6001600160701b0386811690861661364d565b90506000613e9683613f07565b905080821115613f00576000613eb8613eaf84846136ad565b6001549061364d565b601854909150600090613ed59084906119b790879060ff1661364d565b90506000818381613ee257fe5b0490508015613efc57613efc613ef6611e50565b82613f59565b5050505b5050505050565b60006003821115613f4a575080600160028204015b81811015613f4457809150600281828581613f3357fe5b040181613f3c57fe5b049050613f1c565b50613f54565b8115613f54575060015b919050565b600154613f669082613d6a565b6001556001600160a01b038216600090815260026020526040902054613f8c9082613d6a565b6001600160a01b03831660008181526002602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000818310613ff357816136a6565b5090919050565b6001600160a01b03821660009081526002602052604090205461401d90826136ad565b6001600160a01b03831660009081526002602052604090205560015461404390826136ad565b6001556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006141566103e8614150600b8560ff16600281106140a657fe5b601091828204019190066002029054906101000a900461ffff1661ffff1660078660ff16600281106140d457fe5b0154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561411e57600080fd5b505afa158015614132573d6000803e3d6000fd5b505050506040513d602081101561414857600080fd5b50519061364d565b90614230565b90506115ee82826138f4565b600081848411156141f15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156141b657818101518382015260200161419e565b50505050905090810190601f1680156141e35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161422857fe5b049392505050565b60006136a683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836142bc5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156141b657818101518382015260200161419e565b5060008385816142c857fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061431357805160ff1916838001178555614340565b82800160010185558215614340579182015b82811115614340578251825591602001919060010190614325565b5061434c929150614350565b5090565b5b8082111561434c576000815560010161435156fe476f537761703a20494e53554646494349454e545f4f55545055545f414d4f554e54476f537761703a20464f5242494444454e000000000000000000000000000000536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77476f537761703a20494e53554646494349454e545f4c49515549444954595f4255524e45446465706f73697420616d6f756e74206d7573742062652067726561746572207468616e2030776974686472617720616d6f756e74206d7573742062652067726561746572207468616e2030476f537761703a20494e53554646494349454e545f494e5055545f414d4f554e54476f537761703a20494e53554646494349454e545f4c49515549444954595f4d494e544544a2646970667358221220c4a619fe80d8fc5e6414df5f935b1c47df034a4b48ce23c1c557c272e073af4164736f6c634300060c0033a26469706673582212207507187e316ab55d5f0a6655f9c7a749f7de001bd8d45859953336bbf9a0b3e264736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "165:4215:4:-:0;;;967:62;;;;;;;;;-1:-1:-1;998:11:4;:24;;-1:-1:-1;;;;;;998:24:4;1012:10;998:24;;;165:4215;;;;;;",
  "deployedSourceMap": "165:4215:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;241:29;;;:::i;:::-;;;;-1:-1:-1;;;;;241:29:4;;;;;;;;;;;;;;336:35;;;:::i;616:34::-;;;;;;;;;;;;;;;;-1:-1:-1;616:34:4;;:::i;4011:111::-;;;;;;;;;;;;;;;;-1:-1:-1;4011:111:4;-1:-1:-1;;;;;4011:111:4;;:::i;:::-;;1094:106;;;:::i;:::-;;;;;;;;;;;;;;;;412:32;;;:::i;1313:129::-;;;:::i;4227:151::-;;;;;;;;;;;;;;;;-1:-1:-1;4227:151:4;-1:-1:-1;;;;;4227:151:4;;:::i;1700:1725::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1700:1725:4;;;;;;;;;;:::i;504:71::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;504:71:4;;;;;;;;;;:::i;3774:99::-;;;;;;;;;;;;;;;;-1:-1:-1;3774:99:4;-1:-1:-1;;;;;3774:99:4;;:::i;241:29::-;;;-1:-1:-1;;;;;241:29:4;;:::o;336:35::-;;;-1:-1:-1;;;;;336:35:4;;:::o;616:34::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;616:34:4;;-1:-1:-1;616:34:4;:::o;4011:111::-;3636:11;;-1:-1:-1;;;;;3636:11:4;3622:10;:25;3614:55;;;;;-1:-1:-1;;;3614:55:4;;;;;;;;;;;;-1:-1:-1;;;3614:55:4;;;;;;;;;;;;;;;4095:8:::1;:20:::0;;-1:-1:-1;;;;;;4095:20:4::1;-1:-1:-1::0;;;;;4095:20:4;;;::::1;::::0;;;::::1;::::0;;4011:111::o;1094:106::-;1178:8;:15;1094:106;:::o;412:32::-;;;-1:-1:-1;;;;;412:32:4;;:::o;1313:129::-;1369:7;1405:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1395:40;;;;;;1388:47;;1313:129;:::o;4227:151::-;3636:11;;-1:-1:-1;;;;;3636:11:4;3622:10;:25;3614:55;;;;;-1:-1:-1;;;3614:55:4;;;;;;;;;;;;-1:-1:-1;;;3614:55:4;;;;;;;;;;;;;;;4345:11:::1;:26:::0;;-1:-1:-1;;;;;;4345:26:4::1;-1:-1:-1::0;;;;;4345:26:4;;;::::1;::::0;;;::::1;::::0;;4227:151::o;1700:1725::-;1803:12;1887:6;-1:-1:-1;;;;;1877:16:4;:6;-1:-1:-1;;;;;1877:16:4;;;1869:56;;;;;-1:-1:-1;;;1869:56:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:14;2024;2051:6;-1:-1:-1;;;;;2042:15:4;:6;-1:-1:-1;;;;;2042:15:4;;:77;;2104:6;2112;2042:77;;;2073:6;2081;2042:77;2007:112;;-1:-1:-1;2007:112:4;-1:-1:-1;;;;;;2176:20:4;;2168:53;;;;;-1:-1:-1;;;2168:53:4;;;;;;;;;;;;-1:-1:-1;;;2168:53:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;2294:15:4;;;2329:1;2294:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;2286:69;;;;;-1:-1:-1;;;2286:69:4;;;;;;;;;;;;-1:-1:-1;;;2286:69:4;;;;;;;;;;;;;;;2465:21;2489:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2465:53;;2578:12;2620:6;2628;2603:32;;;;;;-1:-1:-1;;;;;2603:32:4;;;;;;;;-1:-1:-1;;;;;2603:32:4;;;;;;;;;;;;;;;;;;;;;;;2593:43;;;;;;2578:58;;2867:4;2856:8;2850:15;2845:2;2835:8;2831:17;2828:1;2820:52;2812:60;;2988:4;-1:-1:-1;;;;;2977:27:4;;3005:6;3013;2977:43;;;;;;;;;;;;;-1:-1:-1;;;;;2977:43:4;;;;;;-1:-1:-1;;;;;2977:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3081:15:4;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;;3081:30:4;;;;;;;;3172:15;;;;;;:23;;;;;;;;:30;;;;;;;;3299:8;:19;;-1:-1:-1;3299:19:4;;;;;;;;;;;;;;;;;;;;;;3402:15;;3368:50;;;;;;;;;;;;;;;;;;;;;;1700:1725;;;;;;;;:::o;504:71::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:71:4;;:::o;3774:99::-;3636:11;;-1:-1:-1;;;;;3636:11:4;3622:10;:25;3614:55;;;;;-1:-1:-1;;;3614:55:4;;;;;;;;;;;;-1:-1:-1;;;3614:55:4;;;;;;;;;;;;;;;3852:5:::1;:14:::0;;-1:-1:-1;;;;;;3852:14:4::1;-1:-1:-1::0;;;;;3852:14:4;;;::::1;::::0;;;::::1;::::0;;3774:99::o;-1:-1:-1:-;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.6.12;\n\nimport \"./interfaces/IGoSwapFactory.sol\";\nimport \"./GoSwapPair.sol\";\n\n/**\n * @title GoSwap工厂合约\n */\ncontract GoSwapFactory is IGoSwapFactory {\n    /// @notice 收税地址\n    address public override feeTo;\n    /// @notice 收税权限控制地址,应为治理地址\n    address public override feeToSetter;\n    /// @notice 迁移合约地址\n    address public override migrator;\n    /// @notice 配对映射,地址=>(地址=>地址)\n    mapping(address => mapping(address => address)) public override getPair;\n    /// @notice 所有配对数组\n    address[] public override allPairs;\n\n    /**\n     * @dev 事件:创建配对\n     * @param token0 token0\n     * @param token1 token1\n     * @param pair 配对地址\n     */\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address pair,\n        uint256\n    );\n\n    /**\n     * @dev 构造函数\n     */\n    constructor() public {\n        feeToSetter = msg.sender;\n    }\n\n    /**\n     * @dev 查询配对数组长度方法\n     */\n    function allPairsLength() external override view returns (uint256) {\n        return allPairs.length;\n    }\n\n    /**\n     * @dev  配对合约源代码Bytecode的hash值(用作前端计算配对合约地址)\n     */\n    function pairCodeHash() external override pure returns (bytes32) {\n        return keccak256(type(GoSwapPair).creationCode);\n    }\n\n    /**\n     * @dev 创建配对\n     * @param tokenA TokenA\n     * @param tokenB TokenB\n     * @return pair 配对地址\n     * @notice 应该从路由合约调用配对寻找工厂合约来调用,否则通过路由合约找不到配对合约\n     */\n    function createPair(address tokenA, address tokenB)\n        external\n        override\n        returns (address pair)\n    {\n        //确认tokenA不等于tokenB\n        require(tokenA != tokenB, \"GoSwap: IDENTICAL_ADDRESSES\");\n        //将tokenA和tokenB进行大小排序,确保tokenA小于tokenB\n        (address token0, address token1) = tokenA < tokenB\n            ? (tokenA, tokenB)\n            : (tokenB, tokenA);\n        //确认token0不等于0地址\n        require(token0 != address(0), \"GoSwap: ZERO_ADDRESS\");\n        //确认配对映射中不存在token0=>token1\n        require(getPair[token0][token1] == address(0), \"GoSwap: PAIR_EXISTS\"); // single check is sufficient\n        //给bytecode变量赋值\"GoSwapPair\"合约的创建字节码\n        bytes memory bytecode = type(GoSwapPair).creationCode;\n        //将token0和token1打包后创建哈希\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        //内联汇编\n        //solium-disable-next-line\n        assembly {\n            //通过create2方法布署合约,并且加盐,返回地址到pair变量\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        //调用pair地址的合约中的\"initialize\"方法,传入变量token0,token1\n        GoSwapPair(pair).initialize(token0, token1);\n        //配对映射中设置token0=>token1=pair\n        getPair[token0][token1] = pair;\n        //配对映射中设置token1=>token0=pair\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        //配对数组中推入pair地址\n        allPairs.push(pair);\n        //触发配对成功事件\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n\n    /**\n     * @dev 修饰符:确认必须为工厂合约的FeeToSetter地址\n     */\n    modifier onlyFeeToSetter() {\n        // 确认必须为工厂合约的FeeToSetter地址\n        require(msg.sender == feeToSetter, \"GoSwap: FORBIDDEN\");\n        _;\n    }\n\n    /**\n     * @dev 设置收税地址\n     * @param _feeTo 收税地址\n     */\n    function setFeeTo(address _feeTo) external override onlyFeeToSetter {\n        feeTo = _feeTo;\n    }\n\n    /**\n     * @dev 设置迁移合约地址的方法,只能由feeToSetter设置\n     * @param _migrator 迁移合约地址\n     */\n    function setMigrator(address _migrator) external override onlyFeeToSetter {\n        migrator = _migrator;\n    }\n\n    /**\n     * @dev 设置收税权限控制\n     * @param _feeToSetter 收税权限控制\n     */\n    function setFeeToSetter(address _feeToSetter)\n        external\n        override\n        onlyFeeToSetter\n    {\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/home/cui/Documents/goswap/goswap-core/contracts/GoSwapFactory.sol",
  "ast": {
    "absolutePath": "/home/cui/Documents/goswap/goswap-core/contracts/GoSwapFactory.sol",
    "exportedSymbols": {
      "GoSwapFactory": [
        2142
      ]
    },
    "id": 2143,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1895,
        "literals": [
          "solidity",
          "=",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:4"
      },
      {
        "absolutePath": "/home/cui/Documents/goswap/goswap-core/contracts/interfaces/IGoSwapFactory.sol",
        "file": "./interfaces/IGoSwapFactory.sol",
        "id": 1896,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 12314,
        "src": "58:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/cui/Documents/goswap/goswap-core/contracts/GoSwapPair.sol",
        "file": "./GoSwapPair.sol",
        "id": 1897,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 5506,
        "src": "100:26:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1899,
              "name": "IGoSwapFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12313,
              "src": "191:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGoSwapFactory_$12313",
                "typeString": "contract IGoSwapFactory"
              }
            },
            "id": 1900,
            "nodeType": "InheritanceSpecifier",
            "src": "191:14:4"
          }
        ],
        "contractDependencies": [
          5505,
          12313
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1898,
          "nodeType": "StructuredDocumentation",
          "src": "128:36:4",
          "text": " @title GoSwap工厂合约"
        },
        "fullyImplemented": true,
        "id": 2142,
        "linearizedBaseContracts": [
          2142,
          12313
        ],
        "name": "GoSwapFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              12252
            ],
            "constant": false,
            "documentation": {
              "id": 1901,
              "nodeType": "StructuredDocumentation",
              "src": "212:24:4",
              "text": "@notice 收税地址"
            },
            "functionSelector": "017e7e58",
            "id": 1904,
            "mutability": "mutable",
            "name": "feeTo",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "256:8:4"
            },
            "scope": 2142,
            "src": "241:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1902,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "241:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12257
            ],
            "constant": false,
            "documentation": {
              "id": 1905,
              "nodeType": "StructuredDocumentation",
              "src": "276:55:4",
              "text": "@notice 收税权限控制地址,应为治理地址"
            },
            "functionSelector": "094b7415",
            "id": 1908,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1907,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "351:8:4"
            },
            "scope": 2142,
            "src": "336:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1906,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "336:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12262
            ],
            "constant": false,
            "documentation": {
              "id": 1909,
              "nodeType": "StructuredDocumentation",
              "src": "377:30:4",
              "text": "@notice 迁移合约地址"
            },
            "functionSelector": "7cd07e47",
            "id": 1912,
            "mutability": "mutable",
            "name": "migrator",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1911,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "427:8:4"
            },
            "scope": 2142,
            "src": "412:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1910,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12271
            ],
            "constant": false,
            "documentation": {
              "id": 1913,
              "nodeType": "StructuredDocumentation",
              "src": "450:49:4",
              "text": "@notice 配对映射,地址=>(地址=>地址)"
            },
            "functionSelector": "e6a43905",
            "id": 1920,
            "mutability": "mutable",
            "name": "getPair",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1919,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "559:8:4"
            },
            "scope": 2142,
            "src": "504:71:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1918,
              "keyType": {
                "id": 1914,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "512:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "504:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1917,
                "keyType": {
                  "id": 1915,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "531:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "523:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1916,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "542:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12278
            ],
            "constant": false,
            "documentation": {
              "id": 1921,
              "nodeType": "StructuredDocumentation",
              "src": "581:30:4",
              "text": "@notice 所有配对数组"
            },
            "functionSelector": "1e3dd18b",
            "id": 1925,
            "mutability": "mutable",
            "name": "allPairs",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1924,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "633:8:4"
            },
            "scope": 2142,
            "src": "616:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1922,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "616:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1923,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "616:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1926,
              "nodeType": "StructuredDocumentation",
              "src": "657:131:4",
              "text": " @dev 事件:创建配对\n @param token0 token0\n @param token1 token1\n @param pair 配对地址"
            },
            "id": 1936,
            "name": "PairCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1928,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1936,
                  "src": "820:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1930,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1936,
                  "src": "852:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1932,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1936,
                  "src": "884:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1936,
                  "src": "906:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "810:109:4"
            },
            "src": "793:127:4"
          },
          {
            "body": {
              "id": 1945,
              "nodeType": "Block",
              "src": "988:41:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1940,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "998:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1941,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1012:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1012:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "998:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1944,
                  "nodeType": "ExpressionStatement",
                  "src": "998:24:4"
                }
              ]
            },
            "documentation": {
              "id": 1937,
              "nodeType": "StructuredDocumentation",
              "src": "926:36:4",
              "text": " @dev 构造函数"
            },
            "id": 1946,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:2:4"
            },
            "returnParameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:4"
            },
            "scope": 2142,
            "src": "967:62:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12283
            ],
            "body": {
              "id": 1956,
              "nodeType": "Block",
              "src": "1161:39:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1953,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1925,
                      "src": "1178:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1178:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1952,
                  "id": 1955,
                  "nodeType": "Return",
                  "src": "1171:22:4"
                }
              ]
            },
            "documentation": {
              "id": 1947,
              "nodeType": "StructuredDocumentation",
              "src": "1035:54:4",
              "text": " @dev 查询配对数组长度方法"
            },
            "functionSelector": "574f2ba3",
            "id": 1957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1949,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1129:8:4"
            },
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:2:4"
            },
            "returnParameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1957,
                  "src": "1152:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1151:9:4"
            },
            "scope": 2142,
            "src": "1094:106:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12312
            ],
            "body": {
              "id": 1971,
              "nodeType": "Block",
              "src": "1378:64:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1966,
                              "name": "GoSwapPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5505,
                              "src": "1410:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                                "typeString": "type(contract GoSwapPair)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                                "typeString": "type(contract GoSwapPair)"
                              }
                            ],
                            "id": 1965,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1405:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1405:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_GoSwapPair_$5505",
                            "typeString": "type(contract GoSwapPair)"
                          }
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1405:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1964,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1395:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1963,
                  "id": 1970,
                  "nodeType": "Return",
                  "src": "1388:47:4"
                }
              ]
            },
            "documentation": {
              "id": 1958,
              "nodeType": "StructuredDocumentation",
              "src": "1206:102:4",
              "text": " @dev  配对合约源代码Bytecode的hash值(用作前端计算配对合约地址)"
            },
            "functionSelector": "9aab9248",
            "id": 1972,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pairCodeHash",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1346:8:4"
            },
            "parameters": {
              "id": 1959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:2:4"
            },
            "returnParameters": {
              "id": 1963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1962,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1972,
                  "src": "1369:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1961,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1368:9:4"
            },
            "scope": 2142,
            "src": "1313:129:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12292
            ],
            "body": {
              "id": 2085,
              "nodeType": "Block",
              "src": "1821:1604:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1984,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "1877:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1985,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "1887:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1877:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f537761703a204944454e544943414c5f414444524553534553",
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1895:29:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5936c3229511cf6460bbc81f4ea2e89f1eb07931eb01d223d4900a4de3729048",
                          "typeString": "literal_string \"GoSwap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "GoSwap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5936c3229511cf6460bbc81f4ea2e89f1eb07931eb01d223d4900a4de3729048",
                          "typeString": "literal_string \"GoSwap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1983,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1869:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:56:4"
                },
                {
                  "assignments": [
                    1991,
                    1993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1991,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2085,
                      "src": "2008:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1990,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2008:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1993,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2085,
                      "src": "2024:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1992,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2004,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1994,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "2042:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1995,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1977,
                        "src": "2051:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2042:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2000,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "2104:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2001,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "2112:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2002,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2103:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 2003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2042:77:4",
                    "trueExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 1997,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "2073:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1998,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "2081:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1999,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2072:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:112:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2006,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1991,
                          "src": "2176:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2194:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2186:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2007,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2186:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2186:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2176:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f537761703a205a45524f5f41444452455353",
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2198:22:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d72a5c6988b9c1024b993579d71c029afbb3fb98ae4bf43f666f26db55114fe6",
                          "typeString": "literal_string \"GoSwap: ZERO_ADDRESS\""
                        },
                        "value": "GoSwap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d72a5c6988b9c1024b993579d71c029afbb3fb98ae4bf43f666f26db55114fe6",
                          "typeString": "literal_string \"GoSwap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 2005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2168:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:53:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2016,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1920,
                              "src": "2294:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 2018,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2017,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "2302:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2294:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2020,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2019,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "2310:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2294:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2329:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2321:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2021,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2321:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2321:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2294:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f537761703a20504149525f455849535453",
                        "id": 2026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2333:21:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b24a6ef9f2bb6b14183cc916aa5fc3384419ebb65355781bc359417abaf7699",
                          "typeString": "literal_string \"GoSwap: PAIR_EXISTS\""
                        },
                        "value": "GoSwap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b24a6ef9f2bb6b14183cc916aa5fc3384419ebb65355781bc359417abaf7699",
                          "typeString": "literal_string \"GoSwap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 2015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2286:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2028,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:69:4"
                },
                {
                  "assignments": [
                    2030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2030,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2085,
                      "src": "2465:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2029,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2465:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2035,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2032,
                          "name": "GoSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5505,
                          "src": "2494:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                            "typeString": "type(contract GoSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                            "typeString": "type(contract GoSwapPair)"
                          }
                        ],
                        "id": 2031,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "2489:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2489:16:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_GoSwapPair_$5505",
                        "typeString": "type(contract GoSwapPair)"
                      }
                    },
                    "id": 2034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2489:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2465:53:4"
                },
                {
                  "assignments": [
                    2037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2037,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2085,
                      "src": "2578:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2036,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2578:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2045,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2041,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1991,
                            "src": "2620:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2042,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "2628:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2039,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2603:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2603:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2603:32:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2038,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2593:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2593:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2578:58:4"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2713:169:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2812:60:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2828:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "2835:8:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2845:2:4",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2831:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2831:17:4"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "2856:8:4"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2850:5:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2850:15:4"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "2867:4:4"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "2820:7:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2820:52:4"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "2812:4:4"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2030,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2835:8:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2030,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2856:8:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1981,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2812:4:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2037,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2867:4:4",
                      "valueSize": 1
                    }
                  ],
                  "id": 2046,
                  "nodeType": "InlineAssembly",
                  "src": "2704:178:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2051,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3005:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2052,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "3013:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2048,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1981,
                            "src": "2988:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2047,
                          "name": "GoSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5505,
                          "src": "2977:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                            "typeString": "type(contract GoSwapPair)"
                          }
                        },
                        "id": 2049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2977:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoSwapPair_$5505",
                          "typeString": "contract GoSwapPair"
                        }
                      },
                      "id": 2050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3984,
                      "src": "2977:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:43:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2055,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "3081:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 2058,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2056,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1991,
                          "src": "3089:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3081:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2059,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "3097:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3081:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2060,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "3107:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3081:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2062,
                  "nodeType": "ExpressionStatement",
                  "src": "3081:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2063,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "3172:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 2066,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2064,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1993,
                          "src": "3180:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3172:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2067,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2065,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3188:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3172:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2068,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "3198:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3172:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2074,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1981,
                        "src": "3313:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2071,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "3299:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3299:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3299:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2076,
                  "nodeType": "ExpressionStatement",
                  "src": "3299:19:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2078,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3380:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2079,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "3388:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2080,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1981,
                        "src": "3396:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2081,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "3402:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3402:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2077,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1936
                      ],
                      "referencedDeclaration": 1936,
                      "src": "3368:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2084,
                  "nodeType": "EmitStatement",
                  "src": "3363:55:4"
                }
              ]
            },
            "documentation": {
              "id": 1973,
              "nodeType": "StructuredDocumentation",
              "src": "1448:247:4",
              "text": " @dev 创建配对\n @param tokenA TokenA\n @param tokenB TokenB\n @return pair 配对地址\n @notice 应该从路由合约调用配对寻找工厂合约来调用,否则通过路由合约找不到配对合约"
            },
            "functionSelector": "c9c65396",
            "id": 2086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1979,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1777:8:4"
            },
            "parameters": {
              "id": 1978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1720:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1977,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1736:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1719:32:4"
            },
            "returnParameters": {
              "id": 1982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1981,
                  "mutability": "mutable",
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1803:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:14:4"
            },
            "scope": 2142,
            "src": "1700:1725:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2098,
              "nodeType": "Block",
              "src": "3545:142:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2090,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3622:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3622:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2092,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1908,
                          "src": "3636:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3622:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f537761703a20464f5242494444454e",
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3649:19:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abae43783a0a7c0631eaa0d55ff4c1df98fab8d9eb23dd2e77b1ab3d1e235b74",
                          "typeString": "literal_string \"GoSwap: FORBIDDEN\""
                        },
                        "value": "GoSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abae43783a0a7c0631eaa0d55ff4c1df98fab8d9eb23dd2e77b1ab3d1e235b74",
                          "typeString": "literal_string \"GoSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 2089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3614:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:55:4"
                },
                {
                  "id": 2097,
                  "nodeType": "PlaceholderStatement",
                  "src": "3679:1:4"
                }
              ]
            },
            "documentation": {
              "id": 2087,
              "nodeType": "StructuredDocumentation",
              "src": "3432:81:4",
              "text": " @dev 修饰符:确认必须为工厂合约的FeeToSetter地址"
            },
            "id": 2099,
            "name": "onlyFeeToSetter",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:2:4"
            },
            "src": "3518:169:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              12297
            ],
            "body": {
              "id": 2112,
              "nodeType": "Block",
              "src": "3842:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2108,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1904,
                      "src": "3852:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2109,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2102,
                      "src": "3860:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3852:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "3852:14:4"
                }
              ]
            },
            "documentation": {
              "id": 2100,
              "nodeType": "StructuredDocumentation",
              "src": "3693:76:4",
              "text": " @dev 设置收税地址\n @param _feeTo 收税地址"
            },
            "functionSelector": "f46901ed",
            "id": 2113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2106,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2105,
                  "name": "onlyFeeToSetter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2099,
                  "src": "3826:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3826:15:4"
              }
            ],
            "name": "setFeeTo",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3817:8:4"
            },
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2102,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2113,
                  "src": "3792:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3791:16:4"
            },
            "returnParameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3842:0:4"
            },
            "scope": 2142,
            "src": "3774:99:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12307
            ],
            "body": {
              "id": 2126,
              "nodeType": "Block",
              "src": "4085:37:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2122,
                      "name": "migrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "4095:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2123,
                      "name": "_migrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2116,
                      "src": "4106:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4095:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:20:4"
                }
              ]
            },
            "documentation": {
              "id": 2114,
              "nodeType": "StructuredDocumentation",
              "src": "3879:127:4",
              "text": " @dev 设置迁移合约地址的方法,只能由feeToSetter设置\n @param _migrator 迁移合约地址"
            },
            "functionSelector": "23cf3118",
            "id": 2127,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2119,
                  "name": "onlyFeeToSetter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2099,
                  "src": "4069:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4069:15:4"
              }
            ],
            "name": "setMigrator",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4060:8:4"
            },
            "parameters": {
              "id": 2117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2116,
                  "mutability": "mutable",
                  "name": "_migrator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2127,
                  "src": "4032:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4031:19:4"
            },
            "returnParameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4085:0:4"
            },
            "scope": 2142,
            "src": "4011:111:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12302
            ],
            "body": {
              "id": 2140,
              "nodeType": "Block",
              "src": "4335:43:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2136,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "4345:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2137,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2130,
                      "src": "4359:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4345:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2139,
                  "nodeType": "ExpressionStatement",
                  "src": "4345:26:4"
                }
              ]
            },
            "documentation": {
              "id": 2128,
              "nodeType": "StructuredDocumentation",
              "src": "4128:94:4",
              "text": " @dev 设置收税权限控制\n @param _feeToSetter 收税权限控制"
            },
            "functionSelector": "a2e74af6",
            "id": 2141,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2134,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2133,
                  "name": "onlyFeeToSetter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2099,
                  "src": "4315:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4315:15:4"
              }
            ],
            "name": "setFeeToSetter",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4298:8:4"
            },
            "parameters": {
              "id": 2131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2130,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2141,
                  "src": "4251:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4251:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4250:22:4"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4335:0:4"
            },
            "scope": 2142,
            "src": "4227:151:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2143,
        "src": "165:4215:4"
      }
    ],
    "src": "32:4349:4"
  },
  "legacyAST": {
    "absolutePath": "/home/cui/Documents/goswap/goswap-core/contracts/GoSwapFactory.sol",
    "exportedSymbols": {
      "GoSwapFactory": [
        2142
      ]
    },
    "id": 2143,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1895,
        "literals": [
          "solidity",
          "=",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:4"
      },
      {
        "absolutePath": "/home/cui/Documents/goswap/goswap-core/contracts/interfaces/IGoSwapFactory.sol",
        "file": "./interfaces/IGoSwapFactory.sol",
        "id": 1896,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 12314,
        "src": "58:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/cui/Documents/goswap/goswap-core/contracts/GoSwapPair.sol",
        "file": "./GoSwapPair.sol",
        "id": 1897,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 5506,
        "src": "100:26:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1899,
              "name": "IGoSwapFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12313,
              "src": "191:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGoSwapFactory_$12313",
                "typeString": "contract IGoSwapFactory"
              }
            },
            "id": 1900,
            "nodeType": "InheritanceSpecifier",
            "src": "191:14:4"
          }
        ],
        "contractDependencies": [
          5505,
          12313
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1898,
          "nodeType": "StructuredDocumentation",
          "src": "128:36:4",
          "text": " @title GoSwap工厂合约"
        },
        "fullyImplemented": true,
        "id": 2142,
        "linearizedBaseContracts": [
          2142,
          12313
        ],
        "name": "GoSwapFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              12252
            ],
            "constant": false,
            "documentation": {
              "id": 1901,
              "nodeType": "StructuredDocumentation",
              "src": "212:24:4",
              "text": "@notice 收税地址"
            },
            "functionSelector": "017e7e58",
            "id": 1904,
            "mutability": "mutable",
            "name": "feeTo",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "256:8:4"
            },
            "scope": 2142,
            "src": "241:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1902,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "241:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12257
            ],
            "constant": false,
            "documentation": {
              "id": 1905,
              "nodeType": "StructuredDocumentation",
              "src": "276:55:4",
              "text": "@notice 收税权限控制地址,应为治理地址"
            },
            "functionSelector": "094b7415",
            "id": 1908,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1907,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "351:8:4"
            },
            "scope": 2142,
            "src": "336:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1906,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "336:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12262
            ],
            "constant": false,
            "documentation": {
              "id": 1909,
              "nodeType": "StructuredDocumentation",
              "src": "377:30:4",
              "text": "@notice 迁移合约地址"
            },
            "functionSelector": "7cd07e47",
            "id": 1912,
            "mutability": "mutable",
            "name": "migrator",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1911,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "427:8:4"
            },
            "scope": 2142,
            "src": "412:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1910,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12271
            ],
            "constant": false,
            "documentation": {
              "id": 1913,
              "nodeType": "StructuredDocumentation",
              "src": "450:49:4",
              "text": "@notice 配对映射,地址=>(地址=>地址)"
            },
            "functionSelector": "e6a43905",
            "id": 1920,
            "mutability": "mutable",
            "name": "getPair",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1919,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "559:8:4"
            },
            "scope": 2142,
            "src": "504:71:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1918,
              "keyType": {
                "id": 1914,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "512:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "504:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1917,
                "keyType": {
                  "id": 1915,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "531:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "523:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1916,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "542:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12278
            ],
            "constant": false,
            "documentation": {
              "id": 1921,
              "nodeType": "StructuredDocumentation",
              "src": "581:30:4",
              "text": "@notice 所有配对数组"
            },
            "functionSelector": "1e3dd18b",
            "id": 1925,
            "mutability": "mutable",
            "name": "allPairs",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1924,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "633:8:4"
            },
            "scope": 2142,
            "src": "616:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1922,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "616:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1923,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "616:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1926,
              "nodeType": "StructuredDocumentation",
              "src": "657:131:4",
              "text": " @dev 事件:创建配对\n @param token0 token0\n @param token1 token1\n @param pair 配对地址"
            },
            "id": 1936,
            "name": "PairCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1928,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1936,
                  "src": "820:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1930,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1936,
                  "src": "852:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1932,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1936,
                  "src": "884:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1936,
                  "src": "906:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "810:109:4"
            },
            "src": "793:127:4"
          },
          {
            "body": {
              "id": 1945,
              "nodeType": "Block",
              "src": "988:41:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1940,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "998:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1941,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1012:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1012:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "998:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1944,
                  "nodeType": "ExpressionStatement",
                  "src": "998:24:4"
                }
              ]
            },
            "documentation": {
              "id": 1937,
              "nodeType": "StructuredDocumentation",
              "src": "926:36:4",
              "text": " @dev 构造函数"
            },
            "id": 1946,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:2:4"
            },
            "returnParameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:4"
            },
            "scope": 2142,
            "src": "967:62:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12283
            ],
            "body": {
              "id": 1956,
              "nodeType": "Block",
              "src": "1161:39:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1953,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1925,
                      "src": "1178:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1178:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1952,
                  "id": 1955,
                  "nodeType": "Return",
                  "src": "1171:22:4"
                }
              ]
            },
            "documentation": {
              "id": 1947,
              "nodeType": "StructuredDocumentation",
              "src": "1035:54:4",
              "text": " @dev 查询配对数组长度方法"
            },
            "functionSelector": "574f2ba3",
            "id": 1957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1949,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1129:8:4"
            },
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:2:4"
            },
            "returnParameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1957,
                  "src": "1152:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1151:9:4"
            },
            "scope": 2142,
            "src": "1094:106:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12312
            ],
            "body": {
              "id": 1971,
              "nodeType": "Block",
              "src": "1378:64:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1966,
                              "name": "GoSwapPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5505,
                              "src": "1410:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                                "typeString": "type(contract GoSwapPair)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                                "typeString": "type(contract GoSwapPair)"
                              }
                            ],
                            "id": 1965,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1405:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1405:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_GoSwapPair_$5505",
                            "typeString": "type(contract GoSwapPair)"
                          }
                        },
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1405:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1964,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1395:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1963,
                  "id": 1970,
                  "nodeType": "Return",
                  "src": "1388:47:4"
                }
              ]
            },
            "documentation": {
              "id": 1958,
              "nodeType": "StructuredDocumentation",
              "src": "1206:102:4",
              "text": " @dev  配对合约源代码Bytecode的hash值(用作前端计算配对合约地址)"
            },
            "functionSelector": "9aab9248",
            "id": 1972,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pairCodeHash",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1346:8:4"
            },
            "parameters": {
              "id": 1959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:2:4"
            },
            "returnParameters": {
              "id": 1963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1962,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1972,
                  "src": "1369:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1961,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1368:9:4"
            },
            "scope": 2142,
            "src": "1313:129:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12292
            ],
            "body": {
              "id": 2085,
              "nodeType": "Block",
              "src": "1821:1604:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1984,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "1877:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1985,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "1887:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1877:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f537761703a204944454e544943414c5f414444524553534553",
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1895:29:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5936c3229511cf6460bbc81f4ea2e89f1eb07931eb01d223d4900a4de3729048",
                          "typeString": "literal_string \"GoSwap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "GoSwap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5936c3229511cf6460bbc81f4ea2e89f1eb07931eb01d223d4900a4de3729048",
                          "typeString": "literal_string \"GoSwap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1983,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1869:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:56:4"
                },
                {
                  "assignments": [
                    1991,
                    1993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1991,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2085,
                      "src": "2008:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1990,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2008:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1993,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2085,
                      "src": "2024:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1992,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2004,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1994,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "2042:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1995,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1977,
                        "src": "2051:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2042:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2000,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "2104:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2001,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "2112:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2002,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2103:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 2003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2042:77:4",
                    "trueExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 1997,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "2073:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1998,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "2081:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1999,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2072:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:112:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2006,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1991,
                          "src": "2176:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2194:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2186:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2007,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2186:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2186:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2176:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f537761703a205a45524f5f41444452455353",
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2198:22:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d72a5c6988b9c1024b993579d71c029afbb3fb98ae4bf43f666f26db55114fe6",
                          "typeString": "literal_string \"GoSwap: ZERO_ADDRESS\""
                        },
                        "value": "GoSwap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d72a5c6988b9c1024b993579d71c029afbb3fb98ae4bf43f666f26db55114fe6",
                          "typeString": "literal_string \"GoSwap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 2005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2168:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:53:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2016,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1920,
                              "src": "2294:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 2018,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2017,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "2302:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2294:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2020,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2019,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "2310:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2294:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2329:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2321:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2021,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2321:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2321:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2294:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f537761703a20504149525f455849535453",
                        "id": 2026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2333:21:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b24a6ef9f2bb6b14183cc916aa5fc3384419ebb65355781bc359417abaf7699",
                          "typeString": "literal_string \"GoSwap: PAIR_EXISTS\""
                        },
                        "value": "GoSwap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b24a6ef9f2bb6b14183cc916aa5fc3384419ebb65355781bc359417abaf7699",
                          "typeString": "literal_string \"GoSwap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 2015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2286:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2028,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:69:4"
                },
                {
                  "assignments": [
                    2030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2030,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2085,
                      "src": "2465:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2029,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2465:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2035,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2032,
                          "name": "GoSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5505,
                          "src": "2494:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                            "typeString": "type(contract GoSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                            "typeString": "type(contract GoSwapPair)"
                          }
                        ],
                        "id": 2031,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "2489:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2489:16:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_GoSwapPair_$5505",
                        "typeString": "type(contract GoSwapPair)"
                      }
                    },
                    "id": 2034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2489:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2465:53:4"
                },
                {
                  "assignments": [
                    2037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2037,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2085,
                      "src": "2578:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2036,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2578:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2045,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2041,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1991,
                            "src": "2620:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2042,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "2628:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2039,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2603:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2603:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2603:32:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2038,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2593:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2593:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2578:58:4"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2713:169:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2812:60:4",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2828:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "2835:8:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2845:2:4",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2831:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2831:17:4"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "2856:8:4"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2850:5:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2850:15:4"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "2867:4:4"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "2820:7:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2820:52:4"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "2812:4:4"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2030,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2835:8:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2030,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2856:8:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1981,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2812:4:4",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2037,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2867:4:4",
                      "valueSize": 1
                    }
                  ],
                  "id": 2046,
                  "nodeType": "InlineAssembly",
                  "src": "2704:178:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2051,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3005:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2052,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "3013:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2048,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1981,
                            "src": "2988:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2047,
                          "name": "GoSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5505,
                          "src": "2977:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GoSwapPair_$5505_$",
                            "typeString": "type(contract GoSwapPair)"
                          }
                        },
                        "id": 2049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2977:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GoSwapPair_$5505",
                          "typeString": "contract GoSwapPair"
                        }
                      },
                      "id": 2050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3984,
                      "src": "2977:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:43:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2055,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "3081:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 2058,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2056,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1991,
                          "src": "3089:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3081:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2059,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "3097:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3081:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2060,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "3107:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3081:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2062,
                  "nodeType": "ExpressionStatement",
                  "src": "3081:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2063,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "3172:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 2066,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2064,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1993,
                          "src": "3180:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3172:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2067,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2065,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3188:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3172:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2068,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "3198:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3172:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2074,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1981,
                        "src": "3313:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2071,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "3299:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3299:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3299:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2076,
                  "nodeType": "ExpressionStatement",
                  "src": "3299:19:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2078,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "3380:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2079,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "3388:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2080,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1981,
                        "src": "3396:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2081,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "3402:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 2082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3402:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2077,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1936
                      ],
                      "referencedDeclaration": 1936,
                      "src": "3368:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2084,
                  "nodeType": "EmitStatement",
                  "src": "3363:55:4"
                }
              ]
            },
            "documentation": {
              "id": 1973,
              "nodeType": "StructuredDocumentation",
              "src": "1448:247:4",
              "text": " @dev 创建配对\n @param tokenA TokenA\n @param tokenB TokenB\n @return pair 配对地址\n @notice 应该从路由合约调用配对寻找工厂合约来调用,否则通过路由合约找不到配对合约"
            },
            "functionSelector": "c9c65396",
            "id": 2086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1979,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1777:8:4"
            },
            "parameters": {
              "id": 1978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1720:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1977,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1736:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1719:32:4"
            },
            "returnParameters": {
              "id": 1982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1981,
                  "mutability": "mutable",
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2086,
                  "src": "1803:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:14:4"
            },
            "scope": 2142,
            "src": "1700:1725:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2098,
              "nodeType": "Block",
              "src": "3545:142:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2090,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3622:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3622:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2092,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1908,
                          "src": "3636:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3622:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f537761703a20464f5242494444454e",
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3649:19:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abae43783a0a7c0631eaa0d55ff4c1df98fab8d9eb23dd2e77b1ab3d1e235b74",
                          "typeString": "literal_string \"GoSwap: FORBIDDEN\""
                        },
                        "value": "GoSwap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abae43783a0a7c0631eaa0d55ff4c1df98fab8d9eb23dd2e77b1ab3d1e235b74",
                          "typeString": "literal_string \"GoSwap: FORBIDDEN\""
                        }
                      ],
                      "id": 2089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3614:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:55:4"
                },
                {
                  "id": 2097,
                  "nodeType": "PlaceholderStatement",
                  "src": "3679:1:4"
                }
              ]
            },
            "documentation": {
              "id": 2087,
              "nodeType": "StructuredDocumentation",
              "src": "3432:81:4",
              "text": " @dev 修饰符:确认必须为工厂合约的FeeToSetter地址"
            },
            "id": 2099,
            "name": "onlyFeeToSetter",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:2:4"
            },
            "src": "3518:169:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              12297
            ],
            "body": {
              "id": 2112,
              "nodeType": "Block",
              "src": "3842:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2108,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1904,
                      "src": "3852:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2109,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2102,
                      "src": "3860:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3852:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "3852:14:4"
                }
              ]
            },
            "documentation": {
              "id": 2100,
              "nodeType": "StructuredDocumentation",
              "src": "3693:76:4",
              "text": " @dev 设置收税地址\n @param _feeTo 收税地址"
            },
            "functionSelector": "f46901ed",
            "id": 2113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2106,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2105,
                  "name": "onlyFeeToSetter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2099,
                  "src": "3826:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3826:15:4"
              }
            ],
            "name": "setFeeTo",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3817:8:4"
            },
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2102,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2113,
                  "src": "3792:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3791:16:4"
            },
            "returnParameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3842:0:4"
            },
            "scope": 2142,
            "src": "3774:99:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12307
            ],
            "body": {
              "id": 2126,
              "nodeType": "Block",
              "src": "4085:37:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2122,
                      "name": "migrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "4095:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2123,
                      "name": "_migrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2116,
                      "src": "4106:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4095:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:20:4"
                }
              ]
            },
            "documentation": {
              "id": 2114,
              "nodeType": "StructuredDocumentation",
              "src": "3879:127:4",
              "text": " @dev 设置迁移合约地址的方法,只能由feeToSetter设置\n @param _migrator 迁移合约地址"
            },
            "functionSelector": "23cf3118",
            "id": 2127,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2119,
                  "name": "onlyFeeToSetter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2099,
                  "src": "4069:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4069:15:4"
              }
            ],
            "name": "setMigrator",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4060:8:4"
            },
            "parameters": {
              "id": 2117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2116,
                  "mutability": "mutable",
                  "name": "_migrator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2127,
                  "src": "4032:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4031:19:4"
            },
            "returnParameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4085:0:4"
            },
            "scope": 2142,
            "src": "4011:111:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12302
            ],
            "body": {
              "id": 2140,
              "nodeType": "Block",
              "src": "4335:43:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2136,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "4345:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2137,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2130,
                      "src": "4359:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4345:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2139,
                  "nodeType": "ExpressionStatement",
                  "src": "4345:26:4"
                }
              ]
            },
            "documentation": {
              "id": 2128,
              "nodeType": "StructuredDocumentation",
              "src": "4128:94:4",
              "text": " @dev 设置收税权限控制\n @param _feeToSetter 收税权限控制"
            },
            "functionSelector": "a2e74af6",
            "id": 2141,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2134,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2133,
                  "name": "onlyFeeToSetter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2099,
                  "src": "4315:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4315:15:4"
              }
            ],
            "name": "setFeeToSetter",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4298:8:4"
            },
            "parameters": {
              "id": 2131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2130,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2141,
                  "src": "4251:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4251:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4250:22:4"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4335:0:4"
            },
            "scope": 2142,
            "src": "4227:151:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2143,
        "src": "165:4215:4"
      }
    ],
    "src": "32:4349:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-22T03:09:29.925Z",
  "devdoc": {
    "events": {
      "PairCreated(address,address,address,uint256)": {
        "details": "事件:创建配对",
        "params": {
          "pair": "配对地址",
          "token0": "token0",
          "token1": "token1"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "allPairsLength()": {
        "details": "查询配对数组长度方法"
      },
      "constructor": {
        "details": "构造函数"
      },
      "createPair(address,address)": {
        "details": "创建配对",
        "params": {
          "tokenA": "TokenA",
          "tokenB": "TokenB"
        },
        "returns": {
          "pair": "配对地址"
        }
      },
      "pairCodeHash()": {
        "details": "配对合约源代码Bytecode的hash值(用作前端计算配对合约地址)"
      },
      "setFeeTo(address)": {
        "details": "设置收税地址",
        "params": {
          "_feeTo": "收税地址"
        }
      },
      "setFeeToSetter(address)": {
        "details": "设置收税权限控制",
        "params": {
          "_feeToSetter": "收税权限控制"
        }
      },
      "setMigrator(address)": {
        "details": "设置迁移合约地址的方法,只能由feeToSetter设置",
        "params": {
          "_migrator": "迁移合约地址"
        }
      }
    },
    "title": "GoSwap工厂合约",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allPairs(uint256)": {
        "notice": "所有配对数组"
      },
      "createPair(address,address)": {
        "notice": "应该从路由合约调用配对寻找工厂合约来调用,否则通过路由合约找不到配对合约"
      },
      "feeTo()": {
        "notice": "收税地址"
      },
      "feeToSetter()": {
        "notice": "收税权限控制地址,应为治理地址"
      },
      "getPair(address,address)": {
        "notice": "配对映射,地址=>(地址=>地址)"
      },
      "migrator()": {
        "notice": "迁移合约地址"
      }
    },
    "version": 1
  }
}